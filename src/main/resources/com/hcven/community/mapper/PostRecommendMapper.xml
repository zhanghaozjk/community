<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hcven.community.mapper.PostRecommendMapper" >
  <resultMap id="BaseResultMap" type="com.hcven.community.data.PostRecommend" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="postId" property="postId" jdbcType="BIGINT" />
    <result column="score" property="score" jdbcType="DOUBLE" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="lastLike" property="lastLike" jdbcType="INTEGER" />
    <result column="lastComment" property="lastComment" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, postId, score, createTime, updateTime, lastLike, lastComment
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from post_recommend
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="listHotPost" resultType="java.lang.Long" parameterType="HashMap">
    select postId
    from post_recommend
    order by `score` desc
    limit #{start,jdbcType=BIGINT}, #{count,jdbcType=INTEGER}
  </select>
  <select id="selectByPostId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from post_recommend
    where postId = #{postId,jdbcType=BIGINT}
  </select>
  <select id="averageScore" resultType="java.lang.Double">
    select avg(score) from `post_recommend`
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from post_recommend
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hcven.community.data.PostRecommend" >
    insert into post_recommend (id, postId, score, 
      createTime, updateTime, lastLike, 
      lastComment)
    values (#{id,jdbcType=BIGINT}, #{postId,jdbcType=BIGINT}, #{score,jdbcType=DOUBLE}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{lastLike,jdbcType=INTEGER}, 
      #{lastComment,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hcven.community.data.PostRecommend" >
    insert into post_recommend
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="postId != null" >
        postId,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
      <if test="lastLike != null" >
        lastLike,
      </if>
      <if test="lastComment != null" >
        lastComment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="postId != null" >
        #{postId,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLike != null" >
        #{lastLike,jdbcType=INTEGER},
      </if>
      <if test="lastComment != null" >
        #{lastComment,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hcven.community.data.PostRecommend" >
    update post_recommend
    <set >
      <if test="postId != null" >
        postId = #{postId,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLike != null" >
        lastLike = #{lastLike,jdbcType=INTEGER},
      </if>
      <if test="lastComment != null" >
        lastComment = #{lastComment,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hcven.community.data.PostRecommend" >
    update post_recommend
    set postId = #{postId,jdbcType=BIGINT},
      score = #{score,jdbcType=DOUBLE},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      lastLike = #{lastLike,jdbcType=INTEGER},
      lastComment = #{lastComment,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>